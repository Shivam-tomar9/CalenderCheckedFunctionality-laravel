

@extends('dashboard-layout/base')


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.3/dist/jquery.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<style>
input.parsley-success,
select.parsley-success,
textarea.parsley-success {
  color: #468847;
  background-color: #DFF0D8;
  border: 1px solid #D6E9C6;
}

input.parsley-error,
select.parsley-error,
textarea.parsley-error {
  color: #B94A48;
  background-color: #F2DEDE;
  border: 1px solid #EED3D7;
}

.parsley-errors-list {
  margin: 2px 0 3px;
  padding: 0;
  list-style-type: none;
  font-size: 0.9em;
  line-height: 0.9em;
  opacity: 0;
  color: #B94A48;

  transition: all .3s ease-in;
  -o-transition: all .3s ease-in;
  -moz-transition: all .3s ease-in;
  -webkit-transition: all .3s ease-in;
}

.parsley-errors-list.filled {
  opacity: 1;
}
</style>
@push('extra_css')
    <link href="https://cdn.jsdelivr.net/npm/@fullcalendar/core@4.2.0/main.min.css" rel="stylesheet" />
@endpush

@section('content')
    <div class="main_content_iner">
        <div class="container-fluid p-0">
            <div class="row justify-content-center">
                <div class="col-12">
                    <div id="calendar"></div>
                </div>
            </div>
        </div>
    </div>

    <button type="button" class="d-none demo-btn" data-toggle="modal" data-target="#userAvailabilityDataModal">
        Launch modal
    </button>

    <div class="modal" id="userAvailabilityDataModal">
   
        <div class="modal-dialog">
            <div class="modal-content">
            
                <div class="modal-header">
                    <h4 class="modal-title">Schedule Classes to Teacher</h4>
                    <input type="hidden" class="date_available" name="date">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                 <form id="yourFormId" action="" method="POST" data-parsley-validate>
                @csrf
                    <div class="form-group">
                        <label for="email">Select Course</label>
                        <select class="form-select" id="course_id" name="course_id" required>
                            <option selected disabled> Select Course</option>
                            @foreach ($courses as $course)
                                <option value="{{ $course->id }}">{{ $course->name }}</option>
                            @endforeach
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="email">Select Teacher </label>
                        <select class="form-select" id="teacher_id" name="teacher_id">
                            <option selected disabled> Select Teacher</option>
                            @foreach ($teachers as $teacher)
                                <option value="{{ $teacher->id }}">{{ $teacher->name }}</option>
                            @endforeach
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="date">Date</label>
                        <input type="date" class="form-control" name="date" required >
                    </div>
                    <button type="submit" class="btn btn-primary">Schedule Classes</button>
                    </form>
                </div>
          
            </div>
        </div>
    </div>

    <div class="modal" id="userAvailabilityTimingDataModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
         <form id="availabilityForm" action="{{ route('admin.store-timing') }}" method="POST">
                @csrf
            <div class="modal-header">
             <h2 class="modal-title" id="modalTitle">Teacher Name : <span class="user_name_"></span></h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
           <div class="modal-body">
    <div class="userAvailabilityTimingPasteHere">
        <table>
        
          <input name="availability_id" id="availability_id"  hidden />
            @foreach ($timings as $index => $timing)
                <tr>
                    <td>
                        <input type="checkbox" name="selectedTimings[]" id="selected-timings{{ $timing->timings_id }}" class="all-timings" value="{{ $timing->timings_id }}">
                    </td>
                    <td>{{ $timing->timings_value }}</td>
                    <td>
                        <input type="text" name="timingInput[{{$index}}]" id="link{{$index}}" class="all-link" placeholder="Zoom link">
                    </td>
                </tr>
            @endforeach
        </table>
    </div>
</div>

    
              <div class="modal-footer">

                <button type="submit" class="btn btn-primary" id="setDate">update timings</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
             </div>
        </div>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="d-none btnUserAvailabilityTimingDataModal" data-toggle="modal" data-target="#userAvailabilityTimingDataModal"></button> 

   
    
@endsection
@push('extra_js')
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@4.2.0/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@4.2.0/main.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@4.2.0/main.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/parsley.js/2.9.2/parsley.min.js" integrity="sha512-eyHL1atYNycXNXZMDndxrDhNAegH2BDWt1TmkXJPoGf1WLlNYt08CSjkqF5lnCRmdm3IrkHid8s2jOUY4NIZVQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        var eventsArray = [
          <?php if($events){ foreach($events as $event){ ?>
                    { 	
                        id           : '<?= $event->id ?>',
                        teacherId    : '<?= $event->teacher_availabilities_teacher_id ?>',  
                        title        : '<?= $event->teacher->name ?>',
                        title_name   : '<?= $event->teacher->name ?>',
                        start        : '<?= date("Y-m-d", strtotime($event->date)) ?>',
                        end          : '<?= date("Y-m-d", strtotime($event->date)) ?>',
                    },
                <?php } } ?>

                        ];



            console.log(eventsArray);
       
            function formatDateToCustomString(date) {
            var year = date.getFullYear();
            var month = String(date.getMonth() + 1).padStart(2, '0');
            var day = String(date.getDate()).padStart(2, '0');
            
            return year + '-' + month + '-' + day;
        }
        
            $('.fc-event-container').on('click',function(){

            });  
        document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
        height: 'auto',
        plugins: ['dayGrid', 'interaction'],

        dateClick: function(info) {
            
            var clickedDate = new Date(info.dateStr);
            var today = new Date();
            today.setHours(0, 0, 0, 0); 

            
            if (clickedDate >= today) {
                $('.date_available').val(info.dateStr);
                $('.demo-btn').click();

                var modalTitle = document.querySelector('.modal-title');
                modalTitle.innerHTML = 'Schedule Classes to Teacher: ' + info.dateStr;
                $('#userAvailabilityDataModal input[type=date]').val(info.dateStr);
                $('#userAvailabilityDataModal input[type=date]').attr('min',info.dateStr);
                $('#userAvailabilityDataModal input[type=date]').attr('max','3000-08-09');
                $('#yourFormId').parsley();
                // $('#userAvailabilityDataModal').modal('show');
                calendar.refetchEvents();
            }
        },


        
                eventClick: function(info) {
				   console.log($(this).attr('data-system',786));
                    $('.user_name_').html(info.event.title);
                    var eventId = info.event.id;
                    var teacherId = info.event.extendedProps.teacherId;
                    var today = new Date();
                    var formattedDate = formatDateToCustomString(today);
                    var availability_id = $('#availability_id').val(eventId);
                    var currentDate = new Date();
                    currentDate.setHours(0, 0, 0, 0);

                    // Convert the event start date to a Date object without the time
                    var eventStartDate = new Date(info.event.start);
                    eventStartDate.setHours(0, 0, 0, 0);

                    $('.fc-day fc-widget-content fc-tue fc-past')
                    $('#setDate').attr('data-date',formattedDate);

                   if (eventStartDate < currentDate) {
                       $('#setDate').hide();
                    } else {
                        $('#setDate').show();
                    }

                    let url = "{{ route('admin.get-store-timing', ['availability_id' => 'id']) }}";
                    url = url.replace('id', eventId);

                    //get the set timing
                    
                                $.ajax({
                                    url:url,
                                    method: 'GET',
                                    success: function(response) {
                                          
                                          if(response.success == 200){
                                               $('.all-timings').each(function(i,e){
                                                $(e).prop('checked',false);
                                               });
                                                $('.all-link').each(function(i,e){
                                                $(e).val('');
                                               });
                                            $(response.data).each(function(index, element) {
                                               $(`#selected-timings${element.store_timings_id}`).prop('checked',true);
                                               $(`#link${index}`).val(element.input_link);
                                          });
                                          }else{
                                            alert('something went wrong.')
                                          }
                                           
                                    },
                                    error: function(xhr, status, error) {
                                    
                                    }
                                });




                        $('.btnUserAvailabilityTimingDataModal').click();



                         $('#availabilityForm').on('submit', function(event) {
                            event.preventDefault();

                            
                            var formData = $(this).serialize();

        
                                formData += '&teacher_name=' + encodeURIComponent(info.event.title);

                            
                                $.ajax({
                                    url: $(this).attr('action'), 
                                    method: 'POST',
                                    data: formData,
                                    success: function(response) {
                                          

                                            
                                    $('#userAvailabilityTimingDataModal').modal('hide');
                                    
                                    },
                                    error: function(xhr, status, error) {
                                    
                                    }
                                });
                            });
                                                      

                },
                events: function(info, successCallback, failureCallback) {
                    successCallback(eventsArray);
                },
            });

            calendar.render();




            $('#yourFormId').on('submit', function(event) {
                event.preventDefault();

                $.ajax({
                    headers: {
                        'X-CSRF-Token': $('meta[name=csrf-token]').attr('content')
                    },
                    url: "{{ route('admin.storeSchedule') }}",
                    method: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        $('#userAvailabilityDataModal button.close').click();
                       

                    }
                });
            });
        });
        
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<script>
    
        $(document).ready(function() {

            $('#course_id').change(function() {
                var courseId = $(this).val();
                console.log(courseId);

                $.ajax({
                    headers: {
                        'X-CSRF-Token': $('meta[name=csrf-token]').attr('content')
                    },
                    url: "{{ route('admin.get-teacher') }}",
                    method: 'GET',
                    data: {
                        course_id: courseId
                    },
                    success: function(response) {
                    {{-- console.log(response.teachers); --}}
                        var teachers = response.teachers;
                        var teacherDropdown = $('#teacher_id');
                        teacherDropdown.empty();

                        if (teachers.length === 0) {
                            teacherDropdown.append(
                                '<option selected disabled> No Teachers available</option>');
                        } else {
                            $.each(teachers, function(key, teacher) {
                                teacherDropdown.append('<option value="' +
                                    teacher.id + '">' + teacher.name + '</option>');
                            });
                            teacherDropdown.trigger('change');
                        }
                    }
                });

                $.ajax({
                    headers: {
                        'X-CSRF-Token': $('meta[name=csrf-token]').attr('content')
                    },
                    url: "",
                    method: 'POST',
                    data: {
                       
                    },
                    success: function(response) {
                   
                    }
                });



            });

        });
    </script>
@endpush
